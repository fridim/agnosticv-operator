---
apiVersion: template.openshift.io/v1
kind: templates
metadata:
  name: {{ _name | to_json }}
  namespace: {{ _namespace | to_json }}
  annotations:
    description: {{ _description | to_json }}
    openshift.io/display-name: {{ merged_vars.__meta__.catalog.display_name| default(_name) | to_json }}
    openshift.io/long-description: {{ merged_vars.__meta__.catalog.long_description | d('') | to_json }}
    tags: quickstart,babylon,{{ account | replace('_', '-') }},{{ merged_vars.__meta__.catalog.tags |  default([]) | join(',') }}
    template.openshift.io/bindable: "false"
{% if current_resource_version | default('') != '' %}
  resourceVersion: "{{ current_resource_version }}"
{% endif %}
  openshift.io/provider-display-name: Red Hat, Inc.
  labels:
    gpte.redhat.com/agnosticv: "true"
message: {{ merged_vars.__meta__.catalog.message | d(default_message) | to_json }}
objects:
- apiVersion: poolboy.gpte.redhat.com/v1
  kind: ResourceClaim
  metadata:
    annotations:
      description: {{ merged_vars.__meta__.catalog.description | d(default_description) | to_json }}
      openshift.io/display-name: {{ merged_vars.__meta__.catalog.display_name| default(_name) | to_json }}
      openshift.io/long-description: {{ merged_vars.__meta__.catalog.long_description | d('') | to_json }}
    generateName: {{ _name }}-
  spec:
    resources:
    - template:
        apiVersion: anarchy.gpte.redhat.com/v1
        kind: AnarchySubject
        metadata:
          annotations:
            poolboy.gpte.redhat.com/resource-provider-name: babylon
          generateName: {{ _name }}-
          labels:
            governor: {{ _name }}
        spec:
          governor: {{ _name }}
{% if vars.merged_vars.__meta__.catalog.parameters | default(None) %}
          vars:
            job_vars:
{%   for param in vars.merged_vars.__meta__.catalog.parameters %}
              {{ param.name | lower }}: {{ '${{' ~ param.name ~ '}}' }}
{%   endfor %}
{% else %}
          vars: {}
{% endif %}

{% if merged_vars.__meta__.catalog.parameters is defined %}
parameters:
{%   for parameter in merged_vars.__meta__.catalog.parameters %}
- name: {{ parameter.name | to_json }}
{%     if parameter.description is defined %}
  description: {{ parameter.description | to_json }}
{%     endif %}
{%     if parameter.formLabel is defined %}
{%       if parameter.formGroup is defined %}
  displayName: {{ (parameter.formGroup ~ ' - ' ~ parameter.formLabel) | to_json }}
{%       else %}
  displayName: {{ parameter.formLabel | to_json }}
{%       endif %}
{%     endif %}
{%     if parameter.required | default(false) | bool %}
  required: true
{%     endif %}
{%     if parameter.value is defined %}
  value: {{ parameter.value | to_json }}
{%     elif parameter.openAPIV3Schema.default is defined %}
  value: {{ parameter.openAPIV3Schema.default | to_json | to_json }}
{%     endif %}
{%   endfor %}
{% endif %}
labels: {{ default_labels | combine(merged_vars.__meta__.catalog.labels | d({})) | to_json }}
