---
apiVersion: poolboy.gpte.redhat.com/v1
kind: ResourceProvider
metadata:
  name: {{ _name | to_json }}
  namespace: {{ _namespace | to_json }}
{% if current_resource_version | default('') != '' %}
  resourceVersion: "{{ current_resource_version }}"
{% endif %}
spec:
  default:
    spec:
      vars:
        action_schedule:
          start: '{% raw %}{{ timestamp.utcnow }}{% endraw %}'
          stop: '{% raw %}{{ timestamp.utcnow.add(resource_provider.spec.override.spec.vars.action_schedule.default_runtime) }}{% endraw %}'

  lifespan:
    # Lifespan defaults include templated logic for open environment exceptions.
    default: >-
      {% raw %}{% if resource_claim.annotations['demo.redhat.com/open-environment'] | default(false) | bool %}365d{% else %}{% endraw %}{{ _lifespan_default }}{% raw %}{% endif %}{% endraw +%}
    maximum: >-
      {% raw %}{% if resource_claim.annotations['demo.redhat.com/open-environment'] | default(false) | bool %}365d{% else %}{% endraw %}{{ _lifespan_maximum }}{% raw %}{% endif %}{% endraw +%}
    relativeMaximum: >-
      {% raw %}{% if resource_claim.annotations['demo.redhat.com/open-environment'] | default(false) | bool %}365d{% else %}{% endraw %}{{ _lifespan_relative_maximum }}{% raw %}{% endif %}{% endraw +%}

{% if vars.merged_vars.__meta__.components | default([]) | length > 0 %}
  linkedResourceProviders:
{%   for _component in vars.merged_vars.__meta__.components | default([]) %}
  - name: "{{ _component.item | lower | replace('_', '-') | replace('/', '.') }}{% if _component.item.split("/") | length < 3 %}.{{ stage }}{% endif %}"
    waitFor: current_state_{{ loop.index0 }} == 'started'
    templateVars:
    - name: current_state_{{ loop.index0 }}
      from: /spec/vars/current_state
    - name: provision_data_{{ loop.index0 }}
      from: /spec/vars/provision_data
{%   endfor %}
{% endif %}

  matchIgnore:
  - /spec/vars/action_schedule(/.*)?

  override:
    apiVersion: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    metadata:
      name: "{{ _name }}-{% raw %}{{ guid }}{% if resource_index | int > 0 or (resource_reference.name | default('')).endswith('-0') %}-{{ resource_index }}{% endif %}{% endraw %}"
      namespace: {{ anarchy_namespace | to_json }}
    spec:
      governor: {{ _governor | to_json }}
      vars:
        action_schedule:
          default_runtime: >-
            {{ _runtime_default }}
          maximum_runtime: >-
            {% raw %}{% if resource_claim.annotations['demo.redhat.com/open-environment'] | default(false) | bool %}365d{% else %}{% endraw %}{{ _runtime_maximum }}{% raw %}{% endif %}{% endraw +%}
        desired_state: |-
{% raw %}
          {%- if 0 < resource_states | map('default', {}, True) | list | json_query("length([?!contains(keys(status.towerJobs.provision || `{}`), 'completeTimestamp')])") -%}
          {#- desired_state started until all AnarchySubjects have finished provision -#}
          started
          {%- elif 0 < resource_templates | json_query("length([?spec.vars.action_schedule.start < '" ~ now(True, "%FT%TZ") ~ "' && spec.vars.action_schedule.stop > '" ~ now(True, "%FT%TZ") ~ "'])") -%}
          {#- desired_state started for all if any should be started as determined by action schedule -#}
          started
          {%- elif 0 < resource_templates | json_query("length([?spec.vars.default_desired_state == 'started' && !(spec.vars.action_schedule.start || spec.vars.action_schedule.stop)])") -%}
          {#- desired_state started for all if any should be started as determined by default_desired_state -#}
          started
          {%- else -%}
          stopped
          {%- endif -%}
        healthy: true
        job_vars:
          guid: "{{ guid }}{% if resource_index | int > 0 or (resource_reference.name | default('')).endswith('-0') %}-{{ resource_index }}{% endif %}"
{% endraw %}
{% for _component in vars.merged_vars.__meta__.components | default([]) %}
{%   set _component_index = loop.index0 %}
{%   for _propagate_item in _component.propagate_provision_data | default([]) %}
{%     if _propagate_item.name | default('*') == '*' %}
          {{ _propagate_item.var }}: >-
            {{ '{{ provision_data_' ~ _component_index ~ ' | object }}' }}
{%     else %}
          {{ _propagate_item.var }}: >-
            {{ '{{ provision_data_' ~ _component_index ~ '.' ~ _propagate_item.name ~ '}}' }}
{%     endif %}
{%   endfor %}
{% endfor %}
{% if merged_vars.__meta__.catalog.requester_parameters | default([]) | length > 0 %}
{%   for parameter in merged_vars.__meta__.catalog.requester_parameters %}
          {{ parameter.name }}: {{ parameter.value | to_json }}
{%   endfor %}
{% endif %}
  resourceRequiresClaim: {{ merged_vars.__meta__.catalog.provision_requires_request | default(merged_vars.__meta__.catalog.requester_parameters | default([]) | length > 0) | bool | to_json }}
  template:
    enable: true

  updateFilters:
  - pathMatch: /spec/vars/action_schedule/.*
    allowedOps:
    - add
    - replace
  # Allow updates to action schedule to set the desired state
  - pathMatch: /spec/vars/desired_state
    allowedOps:
    - add
    - replace

{# Allow requesting status checks if not explicitly disabled #}
{% if not _actions.status.disable | default(false) | bool %}
{%   set _update_filters_empty = false %}
  - pathMatch: /spec/vars/check_status_request_timestamp
    allowedOps:
    - add
    - replace
{% endif %}

{% for parameter in _job_vars_parameters %}
{%   if parameter.allowUpdate | default(false) | bool %}
{%     set _update_filters_empty = false %}
  - pathMatch: /spec/vars/job_vars/{{ parameter.name }}(/.*)?
{%   endif %}
{% endfor %}

  validation:
    openAPIV3Schema:
      type: object
      additionalProperties: false
      required:
      - spec
      properties:
        spec:
          type: object
          additionalProperties: false
          required:
          - vars
          properties:
            vars:
              type: object
              additionalProperties: false
              properties:
                action_schedule:
                  type: object
                  additionalProperties: false
                  properties:
                    start:
                      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
                      type: string
                    stop:
                      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
                      type: string
                check_status_request_timestamp:
                  pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
                  type: string
                job_vars:
                  type: object
                  additionalProperties: false
{% if _job_vars_parameters | length > 0 %}
                  properties:
{%   for parameter in _job_vars_parameters %}
                    {{ parameter.name }}: {{ parameter.openAPIV3Schema | default({}) | combine({"description": parameter.description} if "description" in parameter else {}) | to_json }}
{%   endfor %}
                  required: {{ _job_vars_parameters | json_query('[?required].name') | to_json }}
{% endif %}
