---
apiVersion: poolboy.gpte.redhat.com/v1
kind: ResourceProvider
metadata:
  name: {{ _name | to_json }}
  namespace: {{ _namespace | to_json }}
{% if current_resource_version | default('') != '' %}
  resourceVersion: "{{ current_resource_version }}"
{% endif %}
spec:
  default:
    spec:
      vars:
        action_schedule:
          start: '{% raw %}{{ timestamp.utcnow }}{% endraw %}'
          stop: '{% raw %}{{ timestamp.utcnow.add(resource_provider.spec.override.spec.vars.action_schedule.default_runtime) }}{% endraw %}'
  lifespan: {{ merged_vars.__meta__.lifespan | default(resource_provider_default_lifespan) | to_json }}
  matchIgnore:
  - /spec/vars/action_schedule(/.*)?
  override:
    apiVersion: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    metadata:
      name: '{{ _name }}-{% raw %}{{ guid }}{% if resource_handle.spec.resources | length > 1 %}-{{ resource_index }}{% endif %}{% endraw %}'
      namespace: {{ anarchy_namespace | to_json }}
    spec:
      governor: {{ _governor | to_json }}
      vars:
        action_schedule:
          default_runtime: {{ merged_vars.__meta__.runtime.default | default(resource_provider_runtime_default) | to_json }}
          maximum_runtime: {{ merged_vars.__meta__.runtime.maximum | default(resource_provider_runtime_maximum) | to_json }}
        desired_state: |-
{% raw %}
          {%- if resource_template.spec.vars.action_schedule.start | default('') == ''
            or resource_template.spec.vars.action_schedule.stop | default('') == '' -%}
          {{ resource_template.spec.vars.default_desired_state | default('stopped') }}
          {%- elif timestamp(resource_template.spec.vars.action_schedule.start) > timestamp.utcnow
            or timestamp(resource_template.spec.vars.action_schedule.stop) < timestamp.utcnow -%}
          stopped
          {%- else -%}
          started
          {%- endif -%}
        healthy: true
        job_vars:
          guid: '{{ resource_handle.metadata.name[5:] if resource_handle.metadata.name.startswith(''guid-'') else resource_handle.metadata.name }}'
{% endraw %}
{% if merged_vars.__meta__.catalog.requester_parameters | default([]) | length > 0 %}
{%   for parameter in merged_vars.__meta__.catalog.requester_parameters %}
          {{ parameter.name }}: {{ parameter.value | to_json }}
{%   endfor %}
{% endif %}
  resourceRequiresClaim: {{ merged_vars.__meta__.catalog.provision_requires_request | default(merged_vars.__meta__.catalog.requester_parameters | default([]) | length > 0) | bool | to_json }}
  template:
    enable: true
  updateFilters:
  - allowedOps:
    - add
    - replace
    pathMatch: /spec/vars/action_schedule/start
  - allowedOps:
    - add
    - replace
    pathMatch: /spec/vars/action_schedule/stop
  - allowedOps:
    - add
    - replace
    pathMatch: /spec/vars/desired_state
  validation:
    openAPIV3Schema:
      type: object
      additionalProperties: false
      required:
      - spec
      properties:
        spec:
          type: object
          additionalProperties: false
          required:
          - vars
          properties:
            vars:
              type: object
              additionalProperties: false
              properties:
                action_schedule:
                  type: object
                  additionalProperties: false
                  properties:
                    start:
                      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
                      type: string
                    stop:
                      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
                      type: string
                job_vars:
                  type: object
                  additionalProperties: false
{% if merged_vars.__meta__.catalog.parameters | default([]) | length > 0 %}
                  properties:
{%   for parameter in merged_vars.__meta__.catalog.parameters %}
                    {{ parameter.name }}: {{ parameter.openAPIV3Schema | default({}) | combine({"description": parameter.description} if "description" in parameter else {}) | to_json }}
{%   endfor %}
                  required: {{ merged_vars.__meta__.catalog.parameters | json_query('[?required].name') | to_json }}
{% endif %}
