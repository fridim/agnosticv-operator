---
# - name: Print some debug information
#   vars:
#     msg: |
#         Module Variables ("vars"):
#         --------------------------------
#         {{ vars | to_nice_json }}

#         HOST Variables ("hostvars"):
#         --------------------------------
#         {{ hostvars | to_nice_json }}
#   debug:
#     msg: "{{ msg.split('\n') }}"
#   tags: debug_info

- when: ssh_key is defined
  block:
    - name: Get SSH secret key
      k8s_facts:
        api_version: v1
        kind: Secret
        name: "{{ ssh_key }}"
        namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
      register: ssh_key_r
      no_log: true

    - file:
        path: /opt/ansible/.ssh
        state: directory
        mode: 0700

    - name: Import SSH deploy key to pull the repo
      copy:
        dest: /opt/ansible/.ssh/id_rsa_{{ ssh_key }}
        mode: 0600
        content: "{{ ssh_key_r.resources[0].data.id_rsa | b64decode }}"
      no_log: true

    - name: Clone agnosticv repo
      git:
        accept_hostkey: true
        repo: "{{ url }}"
        version: "{{ ref }}"
        dest: "{{ repo_path }}"
        key_file: /opt/ansible/.ssh/id_rsa_{{ ssh_key }}
      register: r_git_private

- when: ssh_key is not defined
  name: Clone agnosticv repo
  git:
    accept_hostkey: true
    repo: "{{ url }}"
    version: "{{ ref }}"
    dest: "{{ repo_path }}"
  register: r_git_public

- when: >-
    r_git_private is changed
    or r_git_public is changed

  block:
    - name: Create output_dir directory
      file:
        state: directory
        path: "{{ output_dir }}"

    - name: Get list of files changed
      vars:
        r_repo: >-
          {{ r_git_private if r_git_private is changed
          else r_git_public }}
      when: process_changes_only and r_repo.before
      command: >-
        git diff --name-only
        {{ r_repo.before | quote }}
        {{ r_repo.after | quote }}
      args:
        chdir: "{{ agnosticv_path }}"
      # NOTE: git diff includes context_dir
      register: r_changed

    - name: Find all catalog items
      command: >-
        {{ agnosticv_client_path }} --list --has __meta__.catalog
      args:
        chdir: "{{ agnosticv_path }}"
      register: r_catalogitems

    - name: Print stderr lines
      loop: "{{ r_catalogitems.stderr_lines }}"
      loop_control:
        loop_var: line
      include_tasks: print_error.yaml

    - loop: "{{ r_catalogitems.stdout_lines }}"
      loop_control:
        loop_var: c_i
        label: c_i
      include_tasks: generate_catalog_item.yml
      # Process catalog item only if:
      # - it changed in git
      # - ACCOUNT/CATALOG_ITEM/common.yaml changed in git
      # - or if common.yaml changed in git
      # - or if ACCOUNT/account.yaml changed in git
      when: >-
        account != 'EXAMPLE_ACCOUNT'
        and (
          r_changed is skipped

          or

          (context_prefix + c_i) in r_changed.stdout_lines

          or

          [ context_prefix + c_i | dirname + '/common.yml',
            context_prefix + c_i | dirname + '/common.yaml']
          | intersect(r_changed.stdout_lines) | length > 0

          or

          [ context_prefix + c_i | dirname + '/description.adoc',
            context_prefix + c_i | dirname + '/description.html']
          | intersect(r_changed.stdout_lines) | length > 0

          or

          [ context_prefix + account + '/common.yaml',
            context_prefix + account + '/common.yml',
            context_prefix + account + '/account.yaml',
            context_prefix + account + '/account.yml' ]
          | intersect(r_changed.stdout_lines) | length > 0

          or

          [ context_prefix + 'common.yaml',
            context_prefix + 'common.yml']
          | intersect(r_changed.stdout_lines) | length > 0
        )
      vars:
        context_prefix: >-
          {{ context_dir + '/'
          if context_dir is defined
          and context_dir is not none
          and context_dir != ''
          else '' }}
        account: "{{ c_i.split('/')[-3] }}"
        catalog_item: "{{ c_i.split('/')[-2] }}"
        stage: "{{ c_i.split('/')[-1] | regex_replace('\\.ya?ml$', '') }}"
