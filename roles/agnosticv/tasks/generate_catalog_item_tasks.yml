---
- include_tasks: specified_behaviors.yml

- set_fact:
    catalog_item_name: "{{ account | replace('_', '-') }}.{{ catalog_item | lower | regex_replace('_', '-') }}.{{ stage }}"

- name: Use namespace defined in the catalog item YAML
  set_fact:
    template_namespace: >-
      {{ merged_vars.__meta__.catalog.namespace | default('openshift') }}

- name: Get k8s fact for the catalog item
  k8s_facts:
    api_version: babylon.gpte.redhat.com/v1
    kind: catalogitems
    name: "{{ catalog_item_name }}"
    namespace: "{{ template_namespace }}"
  register: catalogitems_facts

- name: Generate Catalog item (CR)
  template:
    src: catalog_item.yml.j2
    dest: "{{ output_dir }}/{{ account }}_{{ catalog_item }}_{{ stage }}_cr.yml"
  vars:
    _catalog: "{{ merged_vars.__meta__.catalog }}"
    _name: "{{ catalog_item_name }}"
    current_resource_version: >-
      {{ catalogitems_facts.resources[0].metadata.resourceVersion
      if catalogitems_facts.resources else '' }}

- name: Get k8s fact for the template
  k8s_facts:
    api_version: template.openshift.io/v1
    kind: templates
    name: "{{ catalog_item_name }}"
    namespace: "{{ template_namespace }}"
  register: template_facts

- name: Generate Catalog item (template)
  template:
    src: template.yml.j2
    dest: "{{ output_dir }}/{{ account }}_{{ catalog_item }}_{{ stage }}_template.yml"
  vars:
    _name: "{{ catalog_item_name }}"
    current_resource_version: >-
      {{ template_facts.resources[0].metadata.resourceVersion
      if template_facts.resources else '' }}

- name: Get k8s fact for the Governor
  k8s_facts:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyGovernor
    name: "{{ catalog_item_name }}"
    namespace: "{{ governor_namespace }}"
  register: governor_facts

- name: Generate Catalog item governor
  template:
    src: governor.yaml.j2
    dest: "{{ output_dir }}/{{ account }}_{{ catalog_item }}_{{ stage }}_governor.yml"
  vars:
    _name: "{{ catalog_item_name }}"
    current_resource_version: >-
      {{ governor_facts.resources[0].metadata.resourceVersion
      if governor_facts.resources else '' }}

- name: Get k8s fact for the ResourceProvider
  k8s_facts:
    api_version: poolboy.gpte.redhat.com/v1
    kind: ResourceProvider
    name: "{{ catalog_item_name }}"
    namespace: "{{ poolboy_namespace }}"
  register: resource_provider_facts

- name: Generate Resource Provider
  template:
    src: resource_provider.yaml.j2
    dest: "{{ output_dir }}/{{ account }}_{{ catalog_item }}_{{ stage }}_resource_provider.yml"
  vars:
    _name: "{{ catalog_item_name }}"
    _governor: "{{ catalog_item_name }}"
    _catalog: "{{ merged_vars.__meta__.catalog }}"
    current_resource_version: >-
      {{ resource_provider_facts.resources[0].metadata.resourceVersion
      if resource_provider_facts.resources else '' }}

- name: Create Namespace
  k8s:
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
    state: present
  loop:
    - "{{ governor_namespace }}"
    - "{{ template_namespace }}"

- name: Create / Update OpenShift template object
  k8s:
    state: present
    src: "{{ output_dir }}/{{ account }}_{{ catalog_item }}_{{ stage }}_template.yml"
    namespace: "{{ template_namespace }}"
    force: yes

- name: Create / Update Babylon Catalog Item object
  k8s:
    state: present
    src: "{{ output_dir }}/{{ account }}_{{ catalog_item }}_{{ stage }}_cr.yml"
    namespace: "{{ template_namespace }}"
    force: yes

- name: Create / Update OpenShift Governor object
  k8s:
    state: present
    src: "{{ output_dir }}/{{ account }}_{{ catalog_item }}_{{ stage }}_governor.yml"
    force: yes
    namespace: "{{ governor_namespace }}"

- name: Create / Update Poolboy ResourceProvider
  k8s:
    state: present
    src: "{{ output_dir }}/{{ account }}_{{ catalog_item }}_{{ stage }}_resource_provider.yml"
    force: yes
    namespace: "{{ poolboy_namespace }}"
