---
- include_tasks: specified_behaviors.yml
- include_tasks: checks_ee.yml
  when: execution_environment | default('', true) != ''

- set_fact:
    catalog_item_name: "{{ account | replace('_', '-') }}.{{ catalog_item | lower | regex_replace('_', '-') }}.{{ stage }}"

- name: Use namespace defined in the catalog item YAML
  vars:
    _catalog_item_namespace: >-
      {{ merged_vars.__meta__.catalog.namespace | default(default_catalog_namespace) }}
  set_fact:
    anarchy_namespace: >-
      {{ lookup('template_string', merged_vars.__meta__.anarchy.namespace | default(default_anarchy_namespace)) | replace('_', '-') }}
    catalog_item_namespace: >-
      {{ lookup('template_string', _catalog_item_namespace) | replace('_', '-') }}

# FIXME - Deploy Anarchy into the namespace?
- name: Create Anarchy Namespace
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ anarchy_namespace }}"

# FIXME - Validate catalog namespace values? Control catalog namespace labels?
- name: Create Catalog Namespace
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ catalog_item_namespace }}"

- name: OpenShift template
  k8s:
    state: present
    definition: "{{ lookup('template', 'template.yml.j2' ) | from_yaml }}"
    apply: true
  vars:
    _name: "{{ catalog_item_name }}"
    _namespace: "{{ catalog_item_namespace }}"
    # Use description.adoc first, then variables
    _description: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'description.adoc') | join('/'),
                  errors='ignore')
      | default(merged_vars.__meta__.catalog.description, true)
      | default(default_description)
      }}
    # Parameters that set variables either do not specify annotation or explicitly set the variable name
    _annotation_parameters: >-
      {{ merged_vars.__meta__.catalog.parameters
      | default([])
      | json_query('[?annotation]')
      }}
    # Parameters that set variables either do not specify annotation or explicitly set the variable name
    _job_vars_parameters: >-
      {{ merged_vars.__meta__.catalog.parameters
      | default([])
      | json_query('[?(variable || !annotation)]')
      }}

# Need to get current resource version and force replace because catalog item
# resources with descriptions are too large to apply.
- name: Get current state of Babylon Catalog Item object
  k8s_info:
    api_version: babylon.gpte.redhat.com/v1
    kind: CatalogItem
    namespace: "{{ catalog_item_namespace }}"
    name: "{{ catalog_item_name }}"
  register: r_get_catalog_item

- name: Create / Update Babylon CatalogItem object
  k8s:
    state: present
    definition: "{{ lookup('template', 'catalog_item.yml.j2') | from_yaml }}"
    force: true
  vars:
    _bookbag: "{{ vars.merged_vars.__meta__.bookbag | default({}) }}"
    _catalog: "{{ vars.merged_vars.__meta__.catalog }}"
    _current_resource_version: "{{ r_get_catalog_item.resources[0].metadata.resourceVersion | default('') }}"
    _disabled_label: "{{ r_get_catalog-item.resources[0].metadata.labels['babylon.gpte.redhat.com/disabled'] | default('') }}"
    _icon: "{{ vars.merged_vars.__meta__.catalog.icon | default('') }}"
    _namespace: "{{ catalog_item_namespace }}"
    _name: "{{ catalog_item_name }}"
    _ops_annotation: "{{ r_get_catalog_item.resources[0].metadata.annotations['babylon.gpte.redhat.com/ops'] | default('') }}"
    _provision_time_estimate: "{{ vars.merged_vars.__meta__.deployer.actions.provision.time_estimate | default('') }}"
    _stage: "{{ stage }}"
    # Use description.adoc first, then variables
    _description_adoc: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'description.adoc') | join('/'),
                  errors='ignore')
      }}
    _description_html: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'description.html') | join('/'),
                  errors='ignore')
      }}
    _description: >-
      {{ _description_html
      | default(_description_adoc, true)
      | default(merged_vars.__meta__.catalog.description, true)
      | default(default_description)
      }}
    _description_format: >-
      {{ (_description_html == '') | ternary('asciidoc', 'html') }}
    _service_ready_message_template_html_j2: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'service-ready-message-template.html.j2') | join('/'),
                  errors='ignore')
      }}
    _service_deleted_message_template_html_j2: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'service-deleted-message-template.html.j2') | join('/'),
                  errors='ignore')
      }}
  register: r_create_catalog_item

- name: Create / Update AnarchyGovernor
  when: None != vars.merged_vars.__meta__.deployer.type | default(None)
  register: r_create_governor
  k8s:
    state: present
    definition: "{{ lookup('template', 'governor.yml.j2') | from_yaml }}"
    apply: true
  vars:
    _actions: >-
      {{ anarchy_governor_default_actions
       | combine(merged_vars.__meta__.deployer.actions | default({}), recursive=true)
       | combine(merged_vars.__meta__.deployer.entry_points | default({}) | dict2items | json_query("[].{key:key, value:{disabled:contains(['', null], value)}}") | items2dict, recursive=true)
      }}
    _name: "{{ catalog_item_name }}"
    _namespace: "{{ anarchy_namespace }}"
    # List of job_vars that are set by parameters and so should not appear in the governor.
    _job_vars_from_parameters: >-
      {{ merged_vars.__meta__.catalog.parameters
      | default([])
      | json_query('[?(variable || !annotation)].name')
      | union(merged_vars.__meta__.catalog.requester_parameters | default([]) | json_query('[].name'))
      }}

- name: Create / Update Poolboy ResourceProvider
  when: None != vars.merged_vars.__meta__.deployer.type | default(None)
  register: r_create_resource_provider
  k8s:
    state: present
    definition: "{{ lookup('template', 'resource_provider.yml.j2') | from_yaml }}"
    apply: true
  vars:
    _name: "{{ catalog_item_name }}"
    _namespace: "{{ poolboy_namespace }}"
    _actions: >-
      {{ anarchy_governor_default_actions
       | combine(merged_vars.__meta__.deployer.actions | default({}), recursive=true)
       | combine(merged_vars.__meta__.deployer.entry_points | default({}) | dict2items | json_query("[].{key:key, value:{disabled:contains(['', null], value)}}") | items2dict, recursive=true)
      }}
    _catalog: "{{ vars.merged_vars.__meta__.catalog }}"
    _governor: "{{ catalog_item_name }}"
    # Parameters that set variables either do not specify annotation or explicitly set the variable name
    _job_vars_parameters: >-
      {{ merged_vars.__meta__.catalog.parameters
      | default([])
      | json_query('[?(variable || !annotation)]')
      }}

- when: >-
    logstash_report | bool
    and (
      r_create_catalog_item is changed
      or r_create_governor is changed
      or r_create_resource_provider is changed
    )
  name: Report to logstash
  vars:
    _status: updated
  include_tasks: logstash_report.yml
